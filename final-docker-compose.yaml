name: nv-ingest
services:
  grafana:
    container_name: grafana-service
    image: grafana/grafana
    networks:
      default: null
    ports:
      - mode: ingress
        target: 3000
        published: "3000"
        protocol: tcp
  nv-ingest-ms-runtime:
    build:
      context: /home/jeremy/Development/nv-ingest
      dockerfile: ./Dockerfile
      target: development
    cap_add:
      - sys_nice
    deploy:
      resources:
        reservations:
          devices:
            - capabilities:
                - gpu
              driver: nvidia
              device_ids:
                - "1"
    environment:
      CACHED_GRPC_ENDPOINT: cached:8001
      CACHED_HTTP_ENDPOINT: https://ai.api.nvidia.com/v1/cv/university-at-buffalo/cached
      CACHED_INFER_PROTOCOL: http
      CUDA_VISIBLE_DEVICES: "0"
      DEPLOT_GRPC_ENDPOINT: deplot:8004
      DEPLOT_HTTP_ENDPOINT: https://ai.api.nvidia.com/v1/vlm/google/deplot
      DEPLOT_INFER_PROTOCOL: http
      DOUGHNUT_GRPC_TRITON: triton-doughnut:8001
      INGEST_LOG_LEVEL: DEBUG
      MESSAGE_CLIENT_HOST: redis
      MESSAGE_CLIENT_PORT: "6379"
      MESSAGE_CLIENT_TYPE: redis
      MINIO_BUCKET: nv-ingest
      MRC_IGNORE_NUMA_CHECK: "1"
      NGC_API_KEY: OThjaDdxbDFnOHBzODllNDRkOXV1a3A2amY6NDBkMmZiZGEtMTIzNC00OGY1LWFkMTEtODA1NDE1ZTVmOWM1
      NVIDIA_BUILD_API_KEY: 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
      OTEL_EXPORTER_OTLP_ENDPOINT: otel-collector:4317
      PADDLE_GRPC_ENDPOINT: paddle:8001
      PADDLE_HTTP_ENDPOINT: https://ai.api.nvidia.com/v1/cv/baidu/paddleocr
      PADDLE_INFER_PROTOCOL: http
      READY_CHECK_ALL_COMPONENTS: "True"
      REDIS_MORPHEUS_TASK_QUEUE: morpheus_task_queue
      VLM_CAPTION_ENDPOINT: https://ai.api.nvidia.com/v1/gr/meta/llama-3.2-90b-vision-instruct/chat/completions
      YOLOX_GRPC_ENDPOINT: yolox:8001
      YOLOX_HTTP_ENDPOINT: https://ai.api.nvidia.com/v1/cv/nvidia/nv-yolox-page-elements-v1
      YOLOX_INFER_PROTOCOL: http
    image: nvcr.io/ohlfw0olaadg/ea-participants/nv-ingest:24.10.1
    networks:
      default: null
    ports:
      - mode: ingress
        target: 7670
        published: "7670"
        protocol: tcp
    volumes:
      - type: bind
        source: /home/jeremy/Development/nv-ingest/data
        target: /workspace/data
        bind:
          create_host_path: true
      - type: bind
        source: /home/jeremy/Development/nv-ingest
        target: /workspace/nv_ingest_dev
        bind:
          create_host_path: true
  otel-collector:
    command:
      - --config=/etc/otel-collector-config.yaml
    depends_on:
      zipkin:
        condition: service_started
        required: true
    hostname: otel-collector
    image: otel/opentelemetry-collector-contrib:0.91.0
    networks:
      default: null
    ports:
      - mode: ingress
        target: 8888
        published: "9988"
        protocol: tcp
      - mode: ingress
        target: 8889
        published: "8889"
        protocol: tcp
      - mode: ingress
        target: 13133
        published: "13133"
        protocol: tcp
      - mode: ingress
        target: 9411
        protocol: tcp
      - mode: ingress
        target: 4317
        published: "4317"
        protocol: tcp
      - mode: ingress
        target: 4318
        published: "4318"
        protocol: tcp
      - mode: ingress
        target: 55679
        published: "55680"
        protocol: tcp
    volumes:
      - type: bind
        source: /home/jeremy/Development/nv-ingest/config/otel-collector-config.yaml
        target: /etc/otel-collector-config.yaml
        bind:
          create_host_path: true
  prometheus:
    command:
      - --web.console.templates=/etc/prometheus/consoles
      - --web.console.libraries=/etc/prometheus/console_libraries
      - --storage.tsdb.retention.time=1h
      - --config.file=/etc/prometheus/prometheus-config.yaml
      - --storage.tsdb.path=/prometheus
      - --web.enable-lifecycle
      - --web.route-prefix=/
      - --enable-feature=exemplar-storage
      - --enable-feature=otlp-write-receiver
    image: prom/prometheus:latest
    networks:
      default: null
    ports:
      - mode: ingress
        target: 9090
        published: "9090"
        protocol: tcp
    volumes:
      - type: bind
        source: /home/jeremy/Development/nv-ingest/config/prometheus.yaml
        target: /etc/prometheus/prometheus-config.yaml
        bind:
          create_host_path: true
  redis:
    image: redis/redis-stack
    networks:
      default: null
    ports:
      - mode: ingress
        target: 6379
        published: "6379"
        protocol: tcp
  zipkin:
    environment:
      JAVA_OPTS: -Xms2g -Xmx2g -XX:+ExitOnOutOfMemoryError
    image: openzipkin/zipkin
    networks:
      default: null
    ports:
      - mode: ingress
        target: 9411
        published: "9411"
        protocol: tcp
networks:
  default:
    name: nv-ingest_default
